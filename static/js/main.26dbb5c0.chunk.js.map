{"version":3,"sources":["pages/logo.png","components/Firebase/firebase.js","components/client/service.js","components/card/upload.image.js","components/card/add.component.js","components/card/add.page.js","components/card/edit.hotel.js","components/card/hotel.list.js","components/card/edit.restaurant.js","components/card/restaurant.list.js","components/card/edit.transport.js","components/card/transport.list.js","components/card/edit.agency.js","components/card/agency.list.js","components/Navigation/navigation.js","components/Routes/routes.js","components/form-input/form-input.component.jsx","components/custom-button/custom-button.component.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.component.jsx","pages/home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","storage","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","firebase_db","FacebookAuthProvider","ref","db","client","push","key","value","child","update","remove","ImageUpload","props","handleChange","e","target","files","image","setState","handleUpload","state","name","put","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","error","console","log","getDownloadURL","then","url","className","type","onChange","this","onClick","src","alt","height","width","Component","AddClient","imageObj","imageArray","images","urls","handleCategory","category","map","onChangeName","bind","onChangeEmail","onChangeWeb","onChangePhone","onChangeLatitude","onChangeLongitude","onChangeImage","uploadImage","saveClient","newClient","dbpath","Name","Email","Website","PhoneNo","Latitude","Longitude","Image","submitted","preventDefault","i","length","URL","createObjectURL","data","Service","create","catch","htmlFor","id","required","multiple","href","style","addPage","React","Client","updateClient","deleteClient","currentClient","message","prevState","delete","refreshList","imageUrl","nextProps","HotelList","setActiveClient","removeAllClients","onDataChange","clients","currentIndex","getAll","off","items","forEach","item","val","published","index","deleteAll","RestaurantList","TransportList","AgencyList","Navigation","to","FormInput","label","otherProps","CustomButton","children","isGoogleSignIn","SignIn","handleSubmit","event","a","email","password","signInWithEmailAndPassword","alert","onSubmit","SignUp","displayName","confirmPassword","createUserWithEmailAndPassword","user","Home","Button","variant","signOut","logo","exact","path","component","HotelsList","App","useState","currentUser","setCurrentUser","signInForm","setSignInForm","useEffect","onAuthStateChanged","display","justifyContent","alignItems","align","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.26dbb5c0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ff10bf3a.png\";","import * as firebase from \"firebase\";\nimport \"firebase/database\";\nimport \"firebase/storage\";\n\nlet config = {\n  apiKey: \"AIzaSyBkGmokW285RxesrlEOEGMOpL7DjBMvk_U\",\n    authDomain: \"galapago-d4744.firebaseapp.com\",\n    databaseURL: \"https://galapago-d4744-default-rtdb.firebaseio.com\",\n    projectId: \"galapago-d4744\",\n    storageBucket: \"galapago-d4744.appspot.com\",\n    messagingSenderId: \"508955483910\",\n    appId: \"1:508955483910:web:fca3d82eb50a8892c64887\"\n};\n\nfirebase.initializeApp(config);\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firebase.ref(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\n\nexport const auth = firebase.auth();\nexport const storage = firebase.storage();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nconst facebookProvider = new firebase.auth.FacebookAuthProvider();\nexport const signInWithFacebook = () => auth.signInWithPopup(facebookProvider);\nexport const storageRef = firebase.storage().ref();\nexport const firebase_db= firebase.database();\n","import firebase from \"../Firebase/firebase\";\r\n\r\nclass Service {\r\n  getAll(db) {\r\n    return db;\r\n  }\r\n\r\n  create(db,client) {\r\n    return db.push(client);\r\n  }\r\n\r\n  update(db,key, value) {\r\n    return db.child(key).update(value);\r\n  }\r\n\r\n  delete(db,key) {\r\n    return db.child(key).remove();\r\n  }\r\n\r\n  deleteAll(db) {\r\n    return db.remove();\r\n  }\r\n}\r\n\r\nexport default new Service();\r\n","import {storage} from \"../Firebase/firebase\";\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nclass ImageUpload extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      image: null,\r\n      url: \"\",\r\n      progress: 0,\r\n    };\r\n  }\r\n\r\n  handleChange = e => {\r\n    if (e.target.files[0]) {\r\n      const image = e.target.files[0];\r\n      this.setState(\r\n        {image: image}\r\n      );\r\n    }\r\n  };\r\n\r\n  handleUpload = () => {\r\n    const { image } = this.state;\r\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      snapshot => {\r\n        // progress function ...\r\n        const progress = Math.round(\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n        );\r\n        this.setState({ progress });\r\n      },\r\n      error => {\r\n        // Error function ...\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        // complete function ...\r\n        storage\r\n          .ref(\"images\")\r\n          .child(image.name)\r\n          .getDownloadURL()\r\n          .then(url => {\r\n            this.setState({ url });\r\n          });\r\n      }\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"center\">\r\n\r\n          <div className=\"file-field input-field\">\r\n              <div className=\"btn\">\r\n                <span>File</span>\r\n                <input type=\"file\" onChange={this.handleChange} />\r\n              </div>\r\n          </div>\r\n          <button\r\n            onClick={this.handleUpload}\r\n            className=\"waves-effect waves-light btn\"\r\n          >\r\n            Upload\r\n          </button>\r\n          <br />\r\n          <br />\r\n          <img\r\n            src={this.state.url || \"https://via.placeholder.com/400x300\"}\r\n            alt=\"Uploaded Images\"\r\n            height=\"300\"\r\n            width=\"400\"\r\n            />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageUpload;\r\n","import React, { Component } from \"react\";\r\nimport Service from \"../client/service\";\r\nimport {firebase_db, storage} from \"../Firebase/firebase\";\r\nimport ImageUpload from \"./upload.image\";\r\n\r\nexport default class AddClient extends Component {\r\n  imageObj = [];\r\n  imageArray = [];\r\n  images = [];\r\n  urls = [];\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangeWeb = this.onChangeWeb.bind(this);\r\n    this.onChangePhone = this.onChangePhone.bind(this);\r\n    this.onChangeLatitude = this.onChangeLatitude.bind(this);\r\n    this.onChangeLongitude = this.onChangeLongitude.bind(this);\r\n    this.onChangeImage = this.onChangeImage.bind(this);\r\n    this.uploadImage = ImageUpload.bind(this);\r\n    this.saveClient = this.saveClient.bind(this);\r\n    this.newClient = this.newClient.bind(this);\r\n\r\n\r\n    this.state = {\r\n      category:\"\",\r\n      dbpath:\"\",\r\n      Name: \"n/a\",\r\n      Email: \"n/a\",\r\n      Website: \"n/a\",\r\n      PhoneNo: \"n/a\",\r\n      Latitude:\"n/a\",\r\n      Longitude:\"n/a\",\r\n      Image: [null],\r\n      progress:0,\r\n      submitted: false,\r\n    };\r\n  }\r\n\r\n  handleCategory = (e) =>{\r\n    this.setState({category: e.target.value});\r\n  }\r\n\r\n  onChangeName(e) {\r\n    this.setState({\r\n      Name: e.target.value,\r\n    });\r\n  }\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      Email: e.target.value,\r\n    });\r\n  }\r\n  onChangeWeb(e) {\r\n    this.setState({\r\n      Website: e.target.value,\r\n    });\r\n  }\r\n  onChangePhone(e) {\r\n    this.setState({\r\n      PhoneNo: e.target.value,\r\n    });\r\n  }\r\n  onChangeLatitude(e) {\r\n    this.setState({\r\n      Latitude: e.target.value,\r\n    });\r\n  }\r\n  onChangeLongitude(e) {\r\n    this.setState({\r\n      Longitude: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeImage(e){\r\n    e.preventDefault();\r\n    this.imageObj.push(e.target.files)\r\n    for (let i = 0; i < this.imageObj[0].length; i ++){\r\n      const image = this.imageObj[0][i];\r\n      this.imageArray.push(image);\r\n      this.images.push(image.name);\r\n      this.urls.push(URL.createObjectURL(image));\r\n    }\r\n    this.setState({ Image: this.images});\r\n  }\r\n\r\n  handleUpload = () => {\r\n      this.imageArray.map(\r\n        (image) =>{\r\n            const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n      uploadTask.on(\r\n            \"state_changed\",\r\n            snapshot => {\r\n                const progress = Math.round(\r\n                  (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n                );\r\n                this.setState({ progress });\r\n            },\r\n\r\n            error => {\r\n              // Error function ...\r\n              console.log(error);\r\n            },\r\n            () => {\r\n              // complete function ...\r\n                  storage\r\n                    .ref(\"images\")\r\n                    .child(image.name)\r\n                    .getDownloadURL()\r\n                    .then(url => {\r\n                      this.setState({ url });\r\n                    });\r\n            }\r\n        )}\r\n    )\r\n  }\r\n\r\n  saveClient() {\r\n      let data = {\r\n        Name: this.state.Name,\r\n        Email: this.state.Email,\r\n        Website: this.state.Website,\r\n        PhoneNo: this.state.PhoneNo,\r\n        Latitude: this.state.Latitude,\r\n        Longitude: this.state.Longitude,\r\n        Image: this.state.Image,\r\n        progress:this.state.progress,\r\n      };\r\n\r\n      let category = this.state.category;\r\n      // console.log({category});\r\n      let db = firebase_db.ref(\"/Hotels/Hotels_list\");\r\n      if (category == \"Restaurant\"){\r\n        db = firebase_db.ref(\"/Restaurants/Restaurants_list\");\r\n      };\r\n      if (category == \"Hotel\"){\r\n        db = firebase_db.ref(\"/Hotels/Hotels_list\");\r\n      };\r\n\r\n      if (category == \"Agency\"){\r\n        db = firebase_db.ref(\"/Agencies/Agencies_list\");\r\n      };\r\n      if (category == \"Transport\"){\r\n        db = firebase_db.ref(\"/Transports/Transports_list\");\r\n      };\r\n\r\n      Service.create(db,data)\r\n        .then(() => {\r\n          console.log(\"Created new item successfully!\");\r\n          this.setState({\r\n            submitted: true,\r\n          });\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n  }\r\n\r\n  newClient() {\r\n    this.setState({\r\n      Name: \"\",\r\n      Email: \"\",\r\n      Website: \"\",\r\n      PhoneNo: \"\",\r\n      Latitude: \"\",\r\n      Longitude: \"\",\r\n      Image: [null],\r\n      submitted: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"submit-form\">\r\n\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newClient}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"category\">Select a Category to add</label>\r\n                <div>\r\n                    <select value={this.state.category}  onChange={this.handleCategory}>\r\n                            <option value=\"Hotel\">Hotel</option>\r\n                            <option value=\"Restaurant\">Restaurant</option>\r\n                            <option value=\"Agency\">Agency</option>\r\n                            <option value=\"Transport\">Transport</option>\r\n                      </select>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Name\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"Name\"\r\n                required\r\n                value={this.state.Name}\r\n                onChange={this.onChangeName}\r\n                name=\"Name\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Email\">Email</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"Email\"\r\n                required\r\n                value={this.state.Email}\r\n                onChange={this.onChangeEmail}\r\n                name=\"Email\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Website\">Website</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"Website\"\r\n                required\r\n                value={this.state.Website}\r\n                onChange={this.onChangeWeb}\r\n                name=\"Website\"\r\n              />\r\n            </div>\r\n\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"PhoneNo\">PhoneNo</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"PhoneNo\"\r\n                required\r\n                value={this.state.PhoneNo}\r\n                onChange={this.onChangePhone}\r\n                name=\"PhoneNo\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Email\">Latitude</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"Latitude\"\r\n                required\r\n                value={this.state.Latitude}\r\n                onChange={this.onChangeLatitude}\r\n                name=\"Latitude\"\r\n              />\r\n            </div>\r\n\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Email\">Longitude</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"Longitude\"\r\n                required\r\n                value={this.state.Longitude}\r\n                onChange={this.onChangeLongitude}\r\n                name=\"Longitude\"\r\n              />\r\n            </div>\r\n              <div className=\"file-field input-field\">\r\n                  <div className=\"btn\">\r\n                    <span>File</span>\r\n                    <input type=\"file\" multiple onChange={this.onChangeImage} />\r\n                  </div>\r\n                  <div className=\"btn\">\r\n\r\n                  </div>\r\n\r\n                  <br />\r\n                  {this.urls.map((url, i) => (\r\n                    <div key={i}>\r\n                      <a href={url} target=\"_blank\">\r\n                        {url}\r\n                      </a>\r\n                    </div>\r\n                  ))}\r\n                  <br />\r\n                  {this.urls.map((url, i) => (\r\n                    <img\r\n                      key={i}\r\n                      style={{ width: \"500px\" }}\r\n                      src={url || \"http://via.placeholder.com/300\"}\r\n                      alt=\"firebase-image\"\r\n                    />\r\n                  ))}\r\n\r\n                  <button\r\n                    onClick={this.handleUpload}\r\n                    className=\"waves-effect waves-light btn\" >\r\n                      Upload\r\n                  </button>\r\n\r\n              </div>\r\n\r\n            <button onClick={this.saveClient} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport AddClient from './add.component';\r\nimport './add.page.css'\r\n\r\n\r\nclass addPage extends React.Component{\r\n  render(){\r\n    return (\r\n      <div>\r\n        <AddClient/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default addPage;\r\n","import React, { Component } from \"react\";\r\nimport Service from \"../client/service\";\r\nimport {firebase_db} from \"../Firebase/firebase\";\r\n\r\nlet db = firebase_db.ref(\"/Hotels/Hotels_list\");\r\n\r\nexport default class Client extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangeWeb = this.onChangeWeb.bind(this);\r\n    this.onChangePhone = this.onChangePhone.bind(this);\r\n    this.onChangeLatitude = this.onChangeLatitude.bind(this);\r\n    this.onChangeLongitude = this.onChangeLongitude.bind(this);\r\n    this.updateClient = this.updateClient.bind(this);\r\n    this.deleteClient = this.deleteClient.bind(this);\r\n\r\n    this.state = {\r\n      currentClient: {\r\n        key: null,\r\n        Name: \"n/a\",\r\n        Email: \"n/a\",\r\n        Website: \"n/a\",\r\n        PhoneNo: \"n/a\",\r\n        Latitude:\"n/a\",\r\n        Longitude:\"n/a\",\r\n        Image: [null],\r\n      },\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    const { client } = nextProps;\r\n    if (prevState.currentClient.key !== client.key) {\r\n      return {\r\n        currentClient: client,\r\n        message: \"\"\r\n      };\r\n    }\r\n\r\n    return prevState.currentClient;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      currentClient: this.props.client,\r\n    });\r\n  }\r\n\r\n  onChangeName(e) {\r\n    const Name = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentClient: {\r\n          ...prevState.currentClient,\r\n          Name: Name,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    const Email = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentClient: {\r\n        ...prevState.currentClient,\r\n        Email: Email,\r\n      },\r\n    }));\r\n  }\r\n\r\n\r\n  onChangeWeb(e) {\r\n    const Website = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentClient: {\r\n        ...prevState.currentClient,\r\n        Website: Website,\r\n      },\r\n    }));\r\n  }\r\n\r\n\r\n  onChangePhone(e) {\r\n    const PhoneNo = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentClient: {\r\n        ...prevState.currentClient,\r\n        PhoneNo: PhoneNo,\r\n      },\r\n    }));\r\n  }\r\n\r\n  onChangeLongitude(e) {\r\n    const Longitude = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentClient: {\r\n        ...prevState.currentClient,\r\n        Longitude: Longitude,\r\n      },\r\n    }));\r\n  }\r\n\r\n  onChangeLatitude(e) {\r\n    const Latitude = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentClient: {\r\n        ...prevState.currentClient,\r\n        Latitude: Latitude,\r\n      },\r\n    }));\r\n  }\r\n\r\n  updateClient() {\r\n    const data = {\r\n      Name: this.state.currentClient.Name,\r\n      Email: this.state.currentClient.Email,\r\n      Website: this.state.currentClient.Website,\r\n      PhoneNo: this.state.currentClient.PhoneNo,\r\n      Latitude: this.state.currentClient.Latitude,\r\n      Longitude: this.state.currentClient.Longitude,\r\n      Image: this.state.currentClient.Longitude,\r\n\r\n    };\r\n\r\n    Service.update(db,this.state.currentClient.key, data)\r\n      .then(() => {\r\n        this.setState({\r\n          message: \"The client was updated successfully!\",\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  deleteClient() {\r\n    Service.delete(db,this.state.currentClient.key)\r\n      .then(() => {\r\n        this.props.refreshList();\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  renderImage(imageUrl){\r\n    return(\r\n      <div>\r\n        <img src = {imageUrl} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { currentClient } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h4>Client</h4>\r\n        {currentClient ? (\r\n          <div className=\"edit-form\">\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"Name\"\r\n                  value={currentClient.Name}\r\n                  onChange={this.onChangeName}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Email</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"Email\"\r\n                  value={currentClient.Email}\r\n                  onChange={this.onChangeEmail}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"Website\">Website</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"Website\"\r\n                  value={currentClient.Website}\r\n                  onChange={this.onChangeWeb}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"PhoneNo\">Phone Number</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"PhoneNo\"\r\n                  value={currentClient.PhoneNo}\r\n                  onChange={this.onChangePhone}\r\n                />\r\n              </div>\r\n\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"Latitude\">Latitude</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"Latitude\"\r\n                  value={currentClient.Latitude}\r\n                  onChange={this.onChangeLatitude}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"Longitude\">Longitude</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"Longitude\"\r\n                  value={currentClient.Longitude}\r\n                  onChange={this.onChangeLongitude}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n              <label htmlFor=\"Image\">Image</label>\r\n                <img\r\n                  src={currentClient.Image || \"https://via.placeholder.com/400x300\"}\r\n                />\r\n              </div>\r\n\r\n            </form>\r\n\r\n            <button\r\n              className=\"badge badge-danger mr-2\"\r\n              onClick={this.deleteClient}\r\n            >\r\n              Delete\r\n            </button>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"badge badge-success\"\r\n              onClick={this.updateClient}\r\n            >\r\n              Update\r\n            </button>\r\n            <p>{this.state.message}</p>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Client...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Service from \"../client/service\";\r\nimport {firebase_db} from \"../Firebase/firebase\";\r\nimport Client from \"./edit.hotel\";\r\n\r\nlet db = firebase_db.ref(\"/Hotels/Hotels_list\");\r\n\r\nexport default class HotelList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActiveClient = this.setActiveClient.bind(this);\r\n    this.removeAllClients = this.removeAllClients.bind(this);\r\n    this.onDataChange = this.onDataChange.bind(this);\r\n\r\n    this.state = {\r\n      clients: [],\r\n      currentClient: null,\r\n      currentIndex: -1,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    Service.getAll(db).on(\"value\", this.onDataChange);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    Service.getAll(db).off(\"value\", this.onDataChange);\r\n  }\r\n\r\n  onDataChange(items) {\r\n    let clients = [];\r\n\r\n    items.forEach((item) => {\r\n      let key = item.key;\r\n      let data = item.val();\r\n      clients.push({\r\n        key: key,\r\n        Name: data.Name,\r\n        Email: data.Email,\r\n        Website: data.Website,\r\n        PhoneNo: data.PhoneNo,\r\n        Latitude: data.Latitude,\r\n        Longitude: data.Longitude,\r\n        published: data.published,\r\n      });\r\n    });\r\n\r\n    this.setState({\r\n      clients: clients,\r\n    });\r\n  }\r\n\r\n  refreshList() {\r\n    this.setState({\r\n      currentClient: null,\r\n      currentIndex: -1,\r\n    });\r\n  }\r\n\r\n  setActiveClient(client, index) {\r\n    this.setState({\r\n      currentClient: client,\r\n      currentIndex: index,\r\n    });\r\n  }\r\n\r\n  removeAllClients() {\r\n    Service.deleteAll(db)\r\n      .then(() => {\r\n        this.refreshList();\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { clients, currentClient, currentIndex } = this.state;\r\n\r\n    return (\r\n      <div className=\"list row\">\r\n        <div className=\"col-md-6\">\r\n          <h4>Hotels List</h4>\r\n\r\n          <ul className=\"list-group\">\r\n            {clients &&\r\n              clients.map((client, index) => (\r\n                <li\r\n                  className={\r\n                    \"list-group-item \" +\r\n                    (index === currentIndex ? \"active\" : \"\")\r\n                  }\r\n                  onClick={() => this.setActiveClient(client, index)}\r\n                  key={index}\r\n                >\r\n                  {client.Name}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n\r\n          <button\r\n            className=\"m-3 btn btn-sm btn-danger\"\r\n            onClick={this.removeAllClients}\r\n          >\r\n            Remove All\r\n          </button>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {currentClient ? (\r\n            <Client\r\n              client={currentClient}\r\n              refreshList={this.refreshList}\r\n            />\r\n          ) : (\r\n            <div>\r\n              <br />\r\n              <p>Please click on a hotel...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Service from \"../client/service\";\r\nimport {firebase_db} from \"../Firebase/firebase\";\r\n\r\nlet db = firebase_db.ref(\"/Restaurants/Restaurants_list\");\r\n\r\nexport default class Client extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangeWeb = this.onChangeWeb.bind(this);\r\n    this.onChangePhone = this.onChangePhone.bind(this);\r\n    this.onChangeLatitude = this.onChangeLatitude.bind(this);\r\n    this.onChangeLongitude = this.onChangeLongitude.bind(this);\r\n    this.updateClient = this.updateClient.bind(this);\r\n    this.deleteClient = this.deleteClient.bind(this);\r\n\r\n    this.state = {\r\n      currentClient: {\r\n        key: null,\r\n        Name: \"n/a\",\r\n        Email: \"n/a\",\r\n        Website: \"n/a\",\r\n        PhoneNo: \"n/a\",\r\n        Latitude:\"n/a\",\r\n        Longitude:\"n/a\",\r\n      },\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    const { client } = nextProps;\r\n    if (prevState.currentClient.key !== client.key) {\r\n      return {\r\n        currentClient: client,\r\n        message: \"\"\r\n      };\r\n    }\r\n\r\n    return prevState.currentClient;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      currentClient: this.props.client,\r\n    });\r\n  }\r\n\r\n  onChangeName(e) {\r\n    const Name = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentClient: {\r\n          ...prevState.currentClient,\r\n          Name: Name,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    const Email = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentClient: {\r\n        ...prevState.currentClient,\r\n        Email: Email,\r\n      },\r\n    }));\r\n  }\r\n\r\n\r\n  onChangeWeb(e) {\r\n    const Website = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentClient: {\r\n        ...prevState.currentClient,\r\n        Website: Website,\r\n      },\r\n    }));\r\n  }\r\n\r\n\r\n  onChangePhone(e) {\r\n    const PhoneNo = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentClient: {\r\n        ...prevState.currentClient,\r\n        PhoneNo: PhoneNo,\r\n      },\r\n    }));\r\n  }\r\n\r\n  onChangeLongitude(e) {\r\n    const Longitude = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentClient: {\r\n        ...prevState.currentClient,\r\n        Longitude: Longitude,\r\n      },\r\n    }));\r\n  }\r\n\r\n  onChangeLatitude(e) {\r\n    const Latitude = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentClient: {\r\n        ...prevState.currentClient,\r\n        Latitude: Latitude,\r\n      },\r\n    }));\r\n  }\r\n\r\n  updateClient() {\r\n    const data = {\r\n      Name: this.state.currentClient.Name,\r\n      Email: this.state.currentClient.Email,\r\n      Website: this.state.currentClient.Website,\r\n      PhoneNo: this.state.currentClient.PhoneNo,\r\n      Latitude: this.state.currentClient.Latitude,\r\n      Longitude: this.state.currentClient.Longitude,\r\n\r\n    };\r\n\r\n    Service.update(db,this.state.currentClient.key, data)\r\n      .then(() => {\r\n        this.setState({\r\n          message: \"The client was updated successfully!\",\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  deleteClient() {\r\n    Service.delete(db,this.state.currentClient.key)\r\n      .then(() => {\r\n        this.props.refreshList();\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { currentClient } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h4>Client</h4>\r\n        {currentClient ? (\r\n          <div className=\"edit-form\">\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"Name\"\r\n                  value={currentClient.Name}\r\n                  onChange={this.onChangeName}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Email</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"Email\"\r\n                  value={currentClient.Email}\r\n                  onChange={this.onChangeEmail}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"Website\">Website</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"Website\"\r\n                  value={currentClient.Website}\r\n                  onChange={this.onChangeWeb}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"PhoneNo\">Phone Number</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"PhoneNo\"\r\n                  value={currentClient.PhoneNo}\r\n                  onChange={this.onChangePhone}\r\n                />\r\n              </div>\r\n\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"Latitude\">Latitude</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"Latitude\"\r\n                  value={currentClient.Latitude}\r\n                  onChange={this.onChangeLatitude}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"Longitude\">Longitude</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"Longitude\"\r\n                  value={currentClient.Longitude}\r\n                  onChange={this.onChangeLongitude}\r\n                />\r\n              </div>\r\n\r\n\r\n            </form>\r\n\r\n            <button\r\n              className=\"badge badge-danger mr-2\"\r\n              onClick={this.deleteClient}\r\n            >\r\n              Delete\r\n            </button>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"badge badge-success\"\r\n              onClick={this.updateClient}\r\n            >\r\n              Update\r\n            </button>\r\n            <p>{this.state.message}</p>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Client...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Service from \"../client/service\";\r\nimport {firebase_db} from \"../Firebase/firebase\";\r\n\r\nimport Client from \"./edit.restaurant\";\r\nlet db = firebase_db.ref(\"/Restaurants/Restaurants_list\");\r\n\r\nexport default class RestaurantList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActiveClient = this.setActiveClient.bind(this);\r\n    this.removeAllClients = this.removeAllClients.bind(this);\r\n    this.onDataChange = this.onDataChange.bind(this);\r\n\r\n    this.state = {\r\n      clients: [],\r\n      currentClient: null,\r\n      currentIndex: -1,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    Service.getAll(db).on(\"value\", this.onDataChange);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    Service.getAll(db).off(\"value\", this.onDataChange);\r\n  }\r\n\r\n  onDataChange(items) {\r\n    let clients = [];\r\n\r\n    items.forEach((item) => {\r\n      let key = item.key;\r\n      let data = item.val();\r\n      clients.push({\r\n        key: key,\r\n        Name: data.Name,\r\n        Email: data.Email,\r\n        Website: data.Website,\r\n        PhoneNo: data.PhoneNo,\r\n        Latitude: data.Latitude,\r\n        Longitude: data.Longitude,\r\n        published: data.published,\r\n      });\r\n    });\r\n\r\n    this.setState({\r\n      clients: clients,\r\n    });\r\n  }\r\n\r\n  refreshList() {\r\n    this.setState({\r\n      currentClient: null,\r\n      currentIndex: -1,\r\n    });\r\n  }\r\n\r\n  setActiveClient(client, index) {\r\n    this.setState({\r\n      currentClient: client,\r\n      currentIndex: index,\r\n    });\r\n  }\r\n\r\n  removeAllClients() {\r\n    Service.deleteAll(db)\r\n      .then(() => {\r\n        this.refreshList();\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { clients, currentClient, currentIndex } = this.state;\r\n\r\n    return (\r\n      <div className=\"list row\">\r\n        <div className=\"col-md-6\">\r\n          <h4>Restaurants List</h4>\r\n\r\n          <ul className=\"list-group\">\r\n            {clients &&\r\n              clients.map((client, index) => (\r\n                <li\r\n                  className={\r\n                    \"list-group-item \" +\r\n                    (index === currentIndex ? \"active\" : \"\")\r\n                  }\r\n                  onClick={() => this.setActiveClient(client, index)}\r\n                  key={index}\r\n                >\r\n                  {client.Name}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n\r\n          <button\r\n            className=\"m-3 btn btn-sm btn-danger\"\r\n            onClick={this.removeAllClients}\r\n          >\r\n            Remove All\r\n          </button>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {currentClient ? (\r\n            <Client\r\n              client={currentClient}\r\n              refreshList={this.refreshList}\r\n            />\r\n          ) : (\r\n            <div>\r\n              <br />\r\n              <p>Please click on a restaurant...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Service from \"../client/service\";\r\nimport {firebase_db} from \"../Firebase/firebase\";\r\n\r\nlet db = firebase_db.ref(\"/Transports/Transports_list\");\r\n\r\nexport default class Client extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangeWeb = this.onChangeWeb.bind(this);\r\n    this.onChangePhone = this.onChangePhone.bind(this);\r\n    this.onChangeLatitude = this.onChangeLatitude.bind(this);\r\n    this.onChangeLongitude = this.onChangeLongitude.bind(this);\r\n    this.updateClient = this.updateClient.bind(this);\r\n    this.deleteClient = this.deleteClient.bind(this);\r\n\r\n    this.state = {\r\n      currentClient: {\r\n        key: null,\r\n        Name: \"n/a\",\r\n        Email: \"n/a\",\r\n        Website: \"n/a\",\r\n        PhoneNo: \"n/a\",\r\n        Latitude:\"n/a\",\r\n        Longitude:\"n/a\",\r\n      },\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    const { client } = nextProps;\r\n    if (prevState.currentClient.key !== client.key) {\r\n      return {\r\n        currentClient: client,\r\n        message: \"\"\r\n      };\r\n    }\r\n\r\n    return prevState.currentClient;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      currentClient: this.props.client,\r\n    });\r\n  }\r\n\r\n  onChangeName(e) {\r\n    const Name = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentClient: {\r\n          ...prevState.currentClient,\r\n          Name: Name,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    const Email = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentClient: {\r\n        ...prevState.currentClient,\r\n        Email: Email,\r\n      },\r\n    }));\r\n  }\r\n\r\n\r\n  onChangeWeb(e) {\r\n    const Website = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentClient: {\r\n        ...prevState.currentClient,\r\n        Website: Website,\r\n      },\r\n    }));\r\n  }\r\n\r\n\r\n  onChangePhone(e) {\r\n    const PhoneNo = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentClient: {\r\n        ...prevState.currentClient,\r\n        PhoneNo: PhoneNo,\r\n      },\r\n    }));\r\n  }\r\n\r\n  onChangeLongitude(e) {\r\n    const Longitude = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentClient: {\r\n        ...prevState.currentClient,\r\n        Longitude: Longitude,\r\n      },\r\n    }));\r\n  }\r\n\r\n  onChangeLatitude(e) {\r\n    const Latitude = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentClient: {\r\n        ...prevState.currentClient,\r\n        Latitude: Latitude,\r\n      },\r\n    }));\r\n  }\r\n\r\n  updateClient() {\r\n    const data = {\r\n      Name: this.state.currentClient.Name,\r\n      Email: this.state.currentClient.Email,\r\n      Website: this.state.currentClient.Website,\r\n      PhoneNo: this.state.currentClient.PhoneNo,\r\n      Latitude: this.state.currentClient.Latitude,\r\n      Longitude: this.state.currentClient.Longitude,\r\n\r\n    };\r\n\r\n    Service.update(db,this.state.currentClient.key, data)\r\n      .then(() => {\r\n        this.setState({\r\n          message: \"The client was updated successfully!\",\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  deleteClient() {\r\n    Service.delete(db,this.state.currentClient.key)\r\n      .then(() => {\r\n        this.props.refreshList();\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { currentClient } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h4>Client</h4>\r\n        {currentClient ? (\r\n          <div className=\"edit-form\">\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"Name\"\r\n                  value={currentClient.Name}\r\n                  onChange={this.onChangeName}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Email</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"Email\"\r\n                  value={currentClient.Email}\r\n                  onChange={this.onChangeEmail}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"Website\">Website</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"Website\"\r\n                  value={currentClient.Website}\r\n                  onChange={this.onChangeWeb}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"PhoneNo\">Phone Number</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"PhoneNo\"\r\n                  value={currentClient.PhoneNo}\r\n                  onChange={this.onChangePhone}\r\n                />\r\n              </div>\r\n\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"Latitude\">Latitude</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"Latitude\"\r\n                  value={currentClient.Latitude}\r\n                  onChange={this.onChangeLatitude}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"Longitude\">Longitude</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"Longitude\"\r\n                  value={currentClient.Longitude}\r\n                  onChange={this.onChangeLongitude}\r\n                />\r\n              </div>\r\n\r\n\r\n            </form>\r\n\r\n            <button\r\n              className=\"badge badge-danger mr-2\"\r\n              onClick={this.deleteClient}\r\n            >\r\n              Delete\r\n            </button>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"badge badge-success\"\r\n              onClick={this.updateClient}\r\n            >\r\n              Update\r\n            </button>\r\n            <p>{this.state.message}</p>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Client...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Service from \"../client/service\";\r\nimport {firebase_db} from \"../Firebase/firebase\";\r\n\r\nimport Client from \"./edit.transport\";\r\nlet db = firebase_db.ref(\"/Transports/Transports_list\");\r\n\r\nexport default class TransportList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActiveClient = this.setActiveClient.bind(this);\r\n    this.removeAllClients = this.removeAllClients.bind(this);\r\n    this.onDataChange = this.onDataChange.bind(this);\r\n\r\n    this.state = {\r\n      clients: [],\r\n      currentClient: null,\r\n      currentIndex: -1,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    Service.getAll(db).on(\"value\", this.onDataChange);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    Service.getAll(db).off(\"value\", this.onDataChange);\r\n  }\r\n\r\n  onDataChange(items) {\r\n    let clients = [];\r\n\r\n    items.forEach((item) => {\r\n      let key = item.key;\r\n      let data = item.val();\r\n      clients.push({\r\n        key: key,\r\n        Name: data.Name,\r\n        Email: data.Email,\r\n        Website: data.Website,\r\n        PhoneNo: data.PhoneNo,\r\n        Latitude: data.Latitude,\r\n        Longitude: data.Longitude,\r\n        published: data.published,\r\n      });\r\n    });\r\n\r\n    this.setState({\r\n      clients: clients,\r\n    });\r\n  }\r\n\r\n  refreshList() {\r\n    this.setState({\r\n      currentClient: null,\r\n      currentIndex: -1,\r\n    });\r\n  }\r\n\r\n  setActiveClient(client, index) {\r\n    this.setState({\r\n      currentClient: client,\r\n      currentIndex: index,\r\n    });\r\n  }\r\n\r\n  removeAllClients() {\r\n    Service.deleteAll(db)\r\n      .then(() => {\r\n        this.refreshList();\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { clients, currentClient, currentIndex } = this.state;\r\n\r\n    return (\r\n      <div className=\"list row\">\r\n        <div className=\"col-md-6\">\r\n          <h4>Transport List</h4>\r\n\r\n          <ul className=\"list-group\">\r\n            {clients &&\r\n              clients.map((client, index) => (\r\n                <li\r\n                  className={\r\n                    \"list-group-item \" +\r\n                    (index === currentIndex ? \"active\" : \"\")\r\n                  }\r\n                  onClick={() => this.setActiveClient(client, index)}\r\n                  key={index}\r\n                >\r\n                  {client.Name}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n\r\n          <button\r\n            className=\"m-3 btn btn-sm btn-danger\"\r\n            onClick={this.removeAllClients}\r\n          >\r\n            Remove All\r\n          </button>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {currentClient ? (\r\n            <Client\r\n              client={currentClient}\r\n              refreshList={this.refreshList}\r\n            />\r\n          ) : (\r\n            <div>\r\n              <br />\r\n              <p>Please click on a transport...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Service from \"../client/service\";\r\nimport {firebase_db} from \"../Firebase/firebase\";\r\n\r\nlet db = firebase_db.ref(\"/Agencies/Agencies_list\");\r\n\r\nexport default class Client extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangeWeb = this.onChangeWeb.bind(this);\r\n    this.onChangePhone = this.onChangePhone.bind(this);\r\n    this.onChangeLatitude = this.onChangeLatitude.bind(this);\r\n    this.onChangeLongitude = this.onChangeLongitude.bind(this);\r\n    this.updateClient = this.updateClient.bind(this);\r\n    this.deleteClient = this.deleteClient.bind(this);\r\n\r\n    this.state = {\r\n      currentClient: {\r\n        key: null,\r\n        Name: \"n/a\",\r\n        Email: \"n/a\",\r\n        Website: \"n/a\",\r\n        PhoneNo: \"n/a\",\r\n        Latitude:\"n/a\",\r\n        Longitude:\"n/a\",\r\n      },\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    const { client } = nextProps;\r\n    if (prevState.currentClient.key !== client.key) {\r\n      return {\r\n        currentClient: client,\r\n        message: \"\"\r\n      };\r\n    }\r\n\r\n    return prevState.currentClient;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      currentClient: this.props.client,\r\n    });\r\n  }\r\n\r\n  onChangeName(e) {\r\n    const Name = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentClient: {\r\n          ...prevState.currentClient,\r\n          Name: Name,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    const Email = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentClient: {\r\n        ...prevState.currentClient,\r\n        Email: Email,\r\n      },\r\n    }));\r\n  }\r\n\r\n\r\n  onChangeWeb(e) {\r\n    const Website = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentClient: {\r\n        ...prevState.currentClient,\r\n        Website: Website,\r\n      },\r\n    }));\r\n  }\r\n\r\n\r\n  onChangePhone(e) {\r\n    const PhoneNo = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentClient: {\r\n        ...prevState.currentClient,\r\n        PhoneNo: PhoneNo,\r\n      },\r\n    }));\r\n  }\r\n\r\n  onChangeLongitude(e) {\r\n    const Longitude = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentClient: {\r\n        ...prevState.currentClient,\r\n        Longitude: Longitude,\r\n      },\r\n    }));\r\n  }\r\n\r\n  onChangeLatitude(e) {\r\n    const Latitude = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentClient: {\r\n        ...prevState.currentClient,\r\n        Latitude: Latitude,\r\n      },\r\n    }));\r\n  }\r\n\r\n  updateClient() {\r\n    const data = {\r\n      Name: this.state.currentClient.Name,\r\n      Email: this.state.currentClient.Email,\r\n      Website: this.state.currentClient.Website,\r\n      PhoneNo: this.state.currentClient.PhoneNo,\r\n      Latitude: this.state.currentClient.Latitude,\r\n      Longitude: this.state.currentClient.Longitude,\r\n\r\n    };\r\n\r\n    Service.update(db,this.state.currentClient.key, data)\r\n      .then(() => {\r\n        this.setState({\r\n          message: \"The client was updated successfully!\",\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  deleteClient() {\r\n    Service.delete(db,this.state.currentClient.key)\r\n      .then(() => {\r\n        this.props.refreshList();\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { currentClient } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h4>Client</h4>\r\n        {currentClient ? (\r\n          <div className=\"edit-form\">\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"Name\"\r\n                  value={currentClient.Name}\r\n                  onChange={this.onChangeName}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Email</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"Email\"\r\n                  value={currentClient.Email}\r\n                  onChange={this.onChangeEmail}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"Website\">Website</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"Website\"\r\n                  value={currentClient.Website}\r\n                  onChange={this.onChangeWeb}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"PhoneNo\">Phone Number</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"PhoneNo\"\r\n                  value={currentClient.PhoneNo}\r\n                  onChange={this.onChangePhone}\r\n                />\r\n              </div>\r\n\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"Latitude\">Latitude</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"Latitude\"\r\n                  value={currentClient.Latitude}\r\n                  onChange={this.onChangeLatitude}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"Longitude\">Longitude</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"Longitude\"\r\n                  value={currentClient.Longitude}\r\n                  onChange={this.onChangeLongitude}\r\n                />\r\n              </div>\r\n\r\n\r\n            </form>\r\n\r\n            <button\r\n              className=\"badge badge-danger mr-2\"\r\n              onClick={this.deleteClient}\r\n            >\r\n              Delete\r\n            </button>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"badge badge-success\"\r\n              onClick={this.updateClient}\r\n            >\r\n              Update\r\n            </button>\r\n            <p>{this.state.message}</p>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Client...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Service from \"../client/service\";\r\nimport {firebase_db} from \"../Firebase/firebase\";\r\n\r\nimport Client from \"./edit.agency\";\r\nlet db = firebase_db.ref(\"/Agencies/Agencies_list\");\r\n\r\nexport default class AgencyList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActiveClient = this.setActiveClient.bind(this);\r\n    this.removeAllClients = this.removeAllClients.bind(this);\r\n    this.onDataChange = this.onDataChange.bind(this);\r\n\r\n    this.state = {\r\n      clients: [],\r\n      currentClient: null,\r\n      currentIndex: -1,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    Service.getAll(db).on(\"value\", this.onDataChange);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    Service.getAll(db).off(\"value\", this.onDataChange);\r\n  }\r\n\r\n  onDataChange(items) {\r\n    let clients = [];\r\n\r\n    items.forEach((item) => {\r\n      let key = item.key;\r\n      let data = item.val();\r\n      clients.push({\r\n        key: key,\r\n        Name: data.Name,\r\n        Email: data.Email,\r\n        Website: data.Website,\r\n        PhoneNo: data.PhoneNo,\r\n        Latitude: data.Latitude,\r\n        Longitude: data.Longitude,\r\n        published: data.published,\r\n      });\r\n    });\r\n\r\n    this.setState({\r\n      clients: clients,\r\n    });\r\n  }\r\n\r\n  refreshList() {\r\n    this.setState({\r\n      currentClient: null,\r\n      currentIndex: -1,\r\n    });\r\n  }\r\n\r\n  setActiveClient(client, index) {\r\n    this.setState({\r\n      currentClient: client,\r\n      currentIndex: index,\r\n    });\r\n  }\r\n\r\n  removeAllClients() {\r\n    Service.deleteAll(db)\r\n      .then(() => {\r\n        this.refreshList();\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { clients, currentClient, currentIndex } = this.state;\r\n\r\n    return (\r\n      <div className=\"list row\">\r\n        <div className=\"col-md-6\">\r\n          <h4>Agencies List</h4>\r\n\r\n          <ul className=\"list-group\">\r\n            {clients &&\r\n              clients.map((client, index) => (\r\n                <li\r\n                  className={\r\n                    \"list-group-item \" +\r\n                    (index === currentIndex ? \"active\" : \"\")\r\n                  }\r\n                  onClick={() => this.setActiveClient(client, index)}\r\n                  key={index}\r\n                >\r\n                  {client.Name}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n\r\n          <button\r\n            className=\"m-3 btn btn-sm btn-danger\"\r\n            onClick={this.removeAllClients}\r\n          >\r\n            Remove All\r\n          </button>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {currentClient ? (\r\n            <Client\r\n              client={currentClient}\r\n              refreshList={this.refreshList}\r\n            />\r\n          ) : (\r\n            <div>\r\n              <br />\r\n              <p>Please click on a agency...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport * as ROUTES from '../Routes/routes';\r\n\r\n\r\nconst Navigation = () => (\r\n  <div className='header'>\r\n\r\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n           <div className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to={ROUTES.HOTELS} className=\"nav-link\">\r\n                Hotel\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <Link to={ROUTES.RESTAURANT} className=\"nav-link\">\r\n                Restaurant\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <Link to={ROUTES.AGENCY} className=\"nav-link\">\r\n                Agency\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <Link to={ROUTES.TRANSPORT} className=\"nav-link\">\r\n                Transport\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <Link to={ROUTES.ADD} className=\"nav-link\">\r\n                Add\r\n              </Link>\r\n            </li>\r\n\r\n          </div>\r\n        </nav>\r\n  </div>\r\n);\r\n\r\nexport default Navigation;\r\n","export const SIGN_UP = '/signup';\r\nexport const SIGN_IN = '/signin';\r\nexport const HOME = '/home';\r\nexport const ACCOUNT = '/account';\r\nexport const HOTELS = '/hotel';\r\nexport const RESTAURANT = '/restaurant';\r\nexport const AGENCY = '/agency';\r\nexport const TRANSPORT = '/transport';\r\nexport const ADD = '/add';\r\n","  \r\nimport React from 'react';\r\n\r\nimport './form-input.styles.scss';\r\n\r\nconst FormInput = ({ handleChange, label, ...otherProps }) => (\r\n  <div className='group'>\r\n    <input className='form-input' onChange={handleChange} {...otherProps} />\r\n    {label ? (\r\n      <label\r\n        className={`${\r\n          otherProps.value.length ? 'shrink' : ''\r\n        } form-input-label`}\r\n      >\r\n        {label}\r\n      </label>\r\n    ) : null}\r\n  </div>\r\n);\r\n\r\nexport default FormInput;","import React from 'react';\r\n\r\nimport './custom-buttom.styles.scss';\r\n\r\nconst CustomButton = ({ children, isGoogleSignIn, ...otherProps }) => (\r\n  <button\r\n    className={`${isGoogleSignIn ? 'google-sign-in' : ''} custom-button`}\r\n    {...otherProps}\r\n  >\r\n    {children}\r\n  </button>\r\n);\r\n\r\nexport default CustomButton;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport GoogleButton from 'react-google-button'\r\nimport {auth, signInWithGoogle, signInWithFacebook } from '../Firebase/firebase';\r\nimport * as ROUTES from '../Routes/routes';\r\n\r\nimport './sign-in.styles.css';\r\n\r\nclass SignIn extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    const { email, password } = this.state;\r\n\r\n    try {\r\n      await auth.signInWithEmailAndPassword(email, password);\r\n      this.setState({ email: '', password: '' });\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { value, name } = event.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='sign-in'>\r\n        <h2>I Already Have An Account</h2>\r\n        <span>Sign in with your email and password</span>\r\n\r\n        <form onSubmit={this.handleSubmit}>\r\n          <FormInput\r\n            name='email'\r\n            type='email'\r\n            handleChange={this.handleChange}\r\n            value={this.state.email}\r\n            label='email'\r\n            required\r\n          />\r\n          <FormInput\r\n            name='password'\r\n            type='password'\r\n            value={this.state.password}\r\n            handleChange={this.handleChange}\r\n            label='password'\r\n            required\r\n          />\r\n          <div className='buttons'>\r\n            <CustomButton type='submit'> Sign in </CustomButton>\r\n            <CustomButton onClick={signInWithGoogle } isGoogleSignIn>\r\n              Google\r\n            </CustomButton>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignIn;\r\n","import React from 'react';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport { auth, createUserProfileDocument } from '../Firebase/firebase';\r\n\r\nimport './sign-up.styles.scss';\r\n\r\nclass SignUp extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      displayName: '',\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: ''\r\n    };\r\n  }\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    const { displayName, email, password, confirmPassword } = this.state;\r\n\r\n    if (password !== confirmPassword) {\r\n      alert(\"passwords don't match\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const { user } = await auth.createUserWithEmailAndPassword(\r\n        email,\r\n        password\r\n      );\r\n\r\n      await auth.createUserWithEmailAndPassword(email,password);\r\n\r\n      this.setState({\r\n        displayName: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { displayName, email, password, confirmPassword } = this.state;\r\n    return (\r\n      <div className='sign-up'>\r\n        <h2 className='title'>I Don't Have An Account</h2>\r\n        <span>Sign up with your email and password</span>\r\n        <form className='sign-up-form' onSubmit={this.handleSubmit}>\r\n          <FormInput\r\n            type='text'\r\n            name='displayName'\r\n            value={displayName}\r\n            onChange={this.handleChange}\r\n            label='Display Name'\r\n            required\r\n          />\r\n          <FormInput\r\n            type='email'\r\n            name='email'\r\n            value={email}\r\n            onChange={this.handleChange}\r\n            label='Email'\r\n            required\r\n          />\r\n          <FormInput\r\n            type='password'\r\n            name='password'\r\n            value={password}\r\n            onChange={this.handleChange}\r\n            label='Password'\r\n            required\r\n          />\r\n          <FormInput\r\n            type='password'\r\n            name='confirmPassword'\r\n            value={confirmPassword}\r\n            onChange={this.handleChange}\r\n            label='Confirm Password'\r\n            required\r\n          />\r\n          <CustomButton type='submit'>SIGN UP</CustomButton>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./home.css\";\r\nimport { Image, Button } from \"react-bootstrap\";\r\n\r\nimport AddHotel from \"../components/card/add.component\";\r\nimport addPage from \"../components/card/add.page\";\r\nimport HotelsList from \"../components/card/hotel.list\";\r\nimport RestaurantList from \"../components/card/restaurant.list\";\r\nimport TransportList from \"../components/card/transport.list\";\r\nimport AgencyList from \"../components/card/agency.list\";\r\nimport logo from \"./logo.png\"\r\nimport Navigation from \"../components/Navigation/navigation\";\r\nimport {auth} from \"../components/Firebase/firebase\";\r\nimport SignIn from \"../components/sign-in/sign-in.component\";\r\nimport SignUp from \"../components/sign-up/sign-up.component\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n          <a href=\"/clients\" className=\"navbar-brand\">\r\n            Galapago\r\n          </a>\r\n          <div className=\"navbar-nav mr-auto\">\r\n            <Navigation/>\r\n            <Button variant=\"dark\" onClick={() => auth.signOut()}>Log out</Button>\r\n          </div>\r\n        </nav>\r\n        <div className=\"container mt-3\">\r\n          <h2>GalapaGo!</h2>\r\n          <Image width=\"125\" className=\"rounded mx-auto d-block\" src={logo} />\r\n\r\n          <Switch>\r\n            <Route exact path={\"/hotel\"} component={HotelsList} />\r\n            <Route exact path={\"/restaurant\"} component={RestaurantList} />\r\n            <Route exact path={\"/agency\"} component={AgencyList} />\r\n            <Route exact path={\"/transport\"} component={TransportList} />\r\n            <Route exact path={\"/add\"} component={addPage} />\r\n            <Route exact path={\"/signup\"} component={SignUp}/>\r\n            <Route exact path={\"/signin\"} component={SignIn}/>\r\n          </Switch>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, Button } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Home from \"./pages/home\";\nimport SignIn from \"./components/sign-in/sign-in.component\";\nimport SignUp from \"./components/sign-up/sign-up.component\";\nimport {auth} from \"./components/Firebase/firebase\";\nimport \"./app.css\";\nconst App = () => {\n\tconst [currentUser, setCurrentUser] = useState(auth.currentUser);\n\tconst [signInForm, setSignInForm] = useState(true);\n\n\tuseEffect(() => {\n\t\tauth.onAuthStateChanged((user) =>{ setCurrentUser(user)});\n\t},[]);\n\n\tif(currentUser != null){\n\t\treturn(<>\n\t\t\t<Home />\n\n\t\t</>);\n\t}\n\tif(signInForm){\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"container-fluid\">\n\t\t\t\t\t<div >\n\t\t\t\t\t\t<SignIn/>\n\t\t\t\t\t\t\t<div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\n\t\t\t\t\t\t\t  <p align=\"center\"> Does not have an account? </p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\n\t\t\t\t\t\t\t <button className=\"buttons\" onClick={() => setSignInForm(false)}>\n\t\t\t\t\t\t\t\tSign Up</button>\n\t\t\t\t\t\t  </div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t\t);\n\t}else{\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"container-fluid\">\n\t\t\t\t\t<div >\n\t\t\t\t\t\t<SignUp/>\n\t\t\t\t\t\t<div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\n\t\t\t\t\t\t\t<p align=\"center\"> Already Have a Account? </p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\n\t\t\t\t\t\t\t<button className=\"buttons\" onClick={() => setSignInForm(true)}>\n\t\t\t\t\t\t\t\tSign In</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t\t);\n\t}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}